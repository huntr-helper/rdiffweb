image: ikus060/python:debian10-py3

variables:
  APT_DEV_BUSTER: https://nexus.ikus-soft.com/repository/apt-dev-buster/
  APT_RELEASE_BUSTERE: https://nexus.ikus-soft.com/repository/apt-release-buster/
  APT_DEV_BULLSEYE: https://nexus.ikus-soft.com/repository/apt-dev-bullseye/
  APT_RELEASE_BULLSEYE: https://nexus.ikus-soft.com/repository/apt-release-bullseye/
  CRYPTOGRAPHY_DONT_BUILD_RUST: 1

stages:
- test
- package
- test-package
- sonar
- publish
- deploy
- downstream

#
# Test Stage
#
.tox:  &tox
  image: ikus060/python:${IMAGE}
  stage: test
  variables:
    IMAGE: debian10-py3
    TOXENV: $CI_JOB_NAME
  before_script:
  - command -v apt && apt -yq update && apt install -yq rdiff-backup libldap2-dev libsasl2-dev
  - command -v yum && yum install -y epel-release && yum install -y rdiff-backup openldap-devel
  script:
  - export TOXENV=${TOXENV:-$CI_JOB_NAME}
  - echo TOXENV=$TOXENV
  - useradd myuser
  - su myuser -c tox
  artifacts:
    paths:
    - coverage-*.xml
    - nosetests-*.xml
    expire_in: 1 day

# FIXME Downgrade setuptools for this target.
# This is broken because of setuptools 46.0.0
.py3-jinja26: 
  <<: *tox

py3-jinja27: 
  <<: *tox

py3-jinja28: 
  <<: *tox

py3-jinja29: 
  <<: *tox

py3-jinja210: 
  <<: *tox

py3-cherrypy18: 
  <<: *tox

debian9-py3-cherrypy35-jinja28: 
  <<: *tox
  variables:
    IMAGE: debian9-py3
    TOXENV: py3-cherrypy35-jinja28
  # Need to upgrade setuptools on Debian stretch with <51.0.0
  before_script:
  - apt-get update && apt install -yq rdiff-backup libldap2-dev libsasl2-dev
  - pip3 install -U "setuptools<51"
  

debian10-py3-cherrypy8-jinja210: 
  <<: *tox
  variables:
    IMAGE: debian10-py3
    TOXENV: py3-cherrypy8-jinja28
  
debian10-py3-rdiff-backup2:
  <<: *tox
  variables:
    IMAGE: debian10-py3
    TOXENV: py3-cherrypy8-jinja210
  before_script:
  - apt-get update
  - apt -y install librsync-dev libldap2-dev libsasl2-dev
  - pip3 install rdiff-backup

debian11-py3-cherrypy9-jinja211: 
  <<: *tox
  variables:
    IMAGE: debian11-py3
    TOXENV: py3-cherrypy9-jinja211

centos7-py3-cherrypy18-jinja210:
  <<: *tox
  variables:
    IMAGE: centos7-py3
    TOXENV: py3-cherrypy18-jinja210

centos8-py3-cherrypy18-jinja210:
  <<: *tox
  variables:
    IMAGE: centos8-py3
    TOXENV: py3-cherrypy18-jinja210

debian10-postgresql-12:
  <<: *tox
  services:
    - postgres:12.2-alpine
  variables:
    IMAGE: debian10-py3
    TOXENV: py3-cherrypy8-jinja210
    RDIFFWEB_TEST_DATABASE_URI: "postgresql://admin@postgres/test"
    POSTGRES_DB: test
    POSTGRES_USER: admin
    POSTGRES_PASSWORD: ""
    POSTGRES_HOST_AUTH_METHOD: trust
  
package:py3: 
  stage: package
  needs: []
  script:
  - pip3 install wheel
  - python3 setup.py sdist bdist_wheel
  dependencies: []
  artifacts:
    paths:
    - dist/*.whl

package:debian:buster: 
  stage: package
  needs: []
  image: ikus060/python:debian10-py3
  script: |
    set -x
    set -e
    export VERSION=$(python3 setup.py --version)
    echo "deb http://deb.debian.org/debian buster-backports main" > /etc/apt/sources.list.d/backports.list
    echo "deb-src http://deb.debian.org/debian buster-backports main" >> /etc/apt/sources.list.d/backports.list
    apt update && apt install -y devscripts && apt build-dep -t buster-backports -y .
    dch -v "$VERSION" "automated build"
    dpkg-buildpackage -b
    mkdir -p ./dist/buster
    mv ../rdiffweb*.deb ./dist/buster
  allow_failure: true
  artifacts:
    paths:
    - ./dist/*

package:debian:bullseye: 
  stage: package
  needs: []
  image: ikus060/python:debian11-py3
  script: |
    set -x
    set -e
    export VERSION=$(python3 setup.py --version)
    apt update && apt install -y devscripts && apt build-dep -y .
    dch -v "$VERSION" "automated build"
    dpkg-buildpackage -b
    mkdir -p ./dist/bullseye
    mv ../rdiffweb*.deb ./dist/bullseye
  allow_failure: true
  artifacts:
    paths:
    - ./dist/*

test-package:debian:buster:
  stage: test-package
  image: debian:buster
  needs: ["package:debian:buster"]
  script:
  - apt update && apt install -y ./dist/buster/rdiffweb*.deb
  - rdiffweb --version
  - (/usr/bin/rdiffweb &)
  - apt install -y curl
  - curl http://localhost:8080
  
test-package:debian:bullseye:
  stage: test-package
  image: debian:buster
  needs: ["package:debian:bullseye"]
  script:
  - apt update && apt install -y ./dist/bullseye/rdiffweb*.deb
  - rdiffweb --version
  - (/usr/bin/rdiffweb &)
  - apt install -y curl
  - curl http://localhost:8080
  
publish:sonar:master:
  stage: sonar
  needs:
  - py3-cherrypy18
  image: sonarsource/sonar-scanner-cli
  only:
  - master
  variables:
    SONAR_PROJECT_BASE_DIR: "${CI_PROJECT_DIR}"
  script:
  - sonar-scanner -X -Dsonar.python.coverage.reportPath=coverage-*.xml -Dsonar.python.xunit.reportPath=nosetests-py3-cherrypy18.xml -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=$CI_PROJECT_NAME -Dsonar.projectVersion=$(git describe) -Dsonar.exclusions=**/test_*.py,rdiffweb/test.py

publish:sonar:dev:
  stage: sonar
  needs:
  - py3-cherrypy18
  image: sonarsource/sonar-scanner-cli
  variables:
    SONAR_PROJECT_BASE_DIR: "${CI_PROJECT_DIR}"
  script:
  - sonar-scanner -X -Dsonar.python.coverage.reportPath=coverage-*.xml -Dsonar.python.xunit.reportPath=nosetests-py3-cherrypy18.xml -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=$CI_PROJECT_NAME-dev -Dsonar.projectVersion=$(git describe) -Dsonar.exclusions=**/test_*.py,rdiffweb/test.py

publish:dev:
  stage: publish
  script: |
    set -x
    # Publish wheel
    pip3 install wheel twine readme_renderer --upgrade
    LANG="C.UTF-8" python3 -m readme_renderer README.md -o /tmp/README.html
    twine upload dist/*.whl -u $NEXUS_USR -p $NEXUS_PWD --repository-url $NEXUS_PYPI_URL
    # Publish deb
    export RDIFFWEB_DEB_FILE=$(ls -1 ./dist/buster/rdiffweb*.deb)
    curl --fail -u "$NEXUS_USR:$NEXUS_PWD" -H "Content-Type: multipart/form-data" --data-binary "@$RDIFFWEB_DEB_FILE" "$APT_DEV_BUSTER"
    # Publish deb
    export RDIFFWEB_DEB_FILE=$(ls -1 ./dist/bullseye/rdiffweb*.deb)
    curl --fail -u "$NEXUS_USR:$NEXUS_PWD" -H "Content-Type: multipart/form-data" --data-binary "@$RDIFFWEB_DEB_FILE" "$APT_DEV_BULLSEYE"

publish:release:
  stage: publish
  only:
  - tags
  script: |
    set -x
    # Publish wheel
    pip3 install wheel twine --upgrade
    twine upload dist/*.whl -u $PYPI_USR -p $PYPI_PWD
    # Publish deb
    export RDIFFWEB_DEB_FILE=$(ls -1 ./dist/buster/rdiffweb*.deb)
    curl --fail -u "$NEXUS_USR:$NEXUS_PWD" -H "Content-Type: multipart/form-data" --data-binary "@$RDIFFWEB_DEB_FILE" "$APT_RELEASE_BUSTER"
    # Publish deb
    export RDIFFWEB_DEB_FILE=$(ls -1 ./dist/bullseye/rdiffweb*.deb)
    curl --fail -u "$NEXUS_USR:$NEXUS_PWD" -H "Content-Type: multipart/form-data" --data-binary "@$RDIFFWEB_DEB_FILE" "$APT_RELEASE_BULLSEYE"
  
deploy_rdiffweb_demo:
  stage: deploy
  environment:
    name: demo
    url: https://rdiffweb-demo.ikus-soft.com/
  script:
  - export RDIFFWEB_VERSION=$(python3 setup.py --version | tail -n 1)
  - echo RDIFFWEB_VERSION=$RDIFFWEB_VERSION
  # Call ansible
  - curl -X POST -F token=36bae86778d901fc6b2d6453a41844 -F "ref=master" -F "variables[RDIFFWEB_VERSION]=$RDIFFWEB_VERSION" https://gitlab.com/api/v4/projects/18716492/trigger/pipeline

bump_minarca_version:
  stage: downstream
  only:
  - tags
  script:
  - export RDIFFWEB_VERSION=$(python3 setup.py --version | tail -n 1)
  - echo RDIFFWEB_VERSION=$RDIFFWEB_VERSION
  # configure git & ssh
  - git config --global user.email "robot@ikus-soft.com"
  - git config --global user.name "IKUS Soft robot"
  - mkdir ~/.ssh && chmod 0700 ~/.ssh
  - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
  - echo "$GITLAB_MINARCA_DEPLOY_KEY" >> ~/.ssh/id_rsa
  - chmod 0600 ~/.ssh/id_rsa
  # Checkout minarca and upgrade version.
  - git clone git@gitlab.com:ikus-soft/minarca.git
  - cd minarca/
  - sed -i -e "s/\"rdiffweb==.*\"/\"rdiffweb==$RDIFFWEB_VERSION\"/g" minarca-server/setup.py
  - git add minarca-server/setup.py
  - git commit -m "Bump rdiffweb to v$RDIFFWEB_VERSION"
  - git push origin master
  